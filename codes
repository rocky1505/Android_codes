✅ 1. Basic Image Placement
XML (activity_main.xml)
<ImageView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:src="@mipmap/ic_launcher"
    android:scaleType="centerInside" />

Java (MainActivity.java)
package com.example.imageplacement;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
}

✅ 2. Two Pages Transition with Buttons
activity_main.xml
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:gravity="center"
    android:layout_width="match_parent" android:layout_height="match_parent">

    <Button android:id="@+id/nextButton"
        android:text="Go to Page 2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"/>
</LinearLayout>

activity_second.xml
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:gravity="center"
    android:layout_width="match_parent" android:layout_height="match_parent">

    <TextView android:text="This is Page 2"
        android:layout_width="wrap_content" android:layout_height="wrap_content"/>
</LinearLayout>

MainActivity.java
package com.example.twopages;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.content.Intent;
import android.widget.Button;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Button next = findViewById(R.id.nextButton);
        next.setOnClickListener(v -> startActivity(new Intent(this, SecondActivity.class)));
    }
}

SecondActivity.java
package com.example.twopages;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;

public class SecondActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_second);
    }
}

✅ 3. Calculator
activity_main.xml
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:gravity="center"
    android:layout_width="match_parent" android:layout_height="match_parent">

    <EditText android:id="@+id/num1" android:hint="Number 1"
        android:inputType="numberDecimal" android:layout_width="200dp" android:layout_height="wrap_content"/>
    <EditText android:id="@+id/num2" android:hint="Number 2"
        android:inputType="numberDecimal" android:layout_width="200dp" android:layout_height="wrap_content"/>
    <Button android:id="@+id/addBtn" android:text="Add" android:layout_width="wrap_content" android:layout_height="wrap_content"/>
    <TextView android:id="@+id/result" android:text="Result" android:layout_width="wrap_content" android:layout_height="wrap_content"/>
</LinearLayout>

MainActivity.java
package com.example.calculator;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.*;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        EditText n1 = findViewById(R.id.num1);
        EditText n2 = findViewById(R.id.num2);
        Button add = findViewById(R.id.addBtn);
        TextView res = findViewById(R.id.result);

        add.setOnClickListener(v -> {
            double a = Double.parseDouble(n1.getText().toString());
            double b = Double.parseDouble(n2.getText().toString());
            res.setText("Result: " + (a + b));
        });
    }
}

✅ 4. Alert Box
XML
<Button xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/alertButton"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:text="Show Alert"
    android:layout_gravity="center" />

Java
package com.example.alertbox;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.Button;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Button b = findViewById(R.id.alertButton);
        b.setOnClickListener(v ->
            new AlertDialog.Builder(this)
                .setTitle("Alert")
                .setMessage("This is an alert box!")
                .setPositiveButton("OK", null)
                .show());
    }
}

✅ 5. GPS (show location)

Add permission in AndroidManifest.xml:

<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>

XML
<Button xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/getLoc"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:text="Get Location"
    android:layout_gravity="center"/>

Java
package com.example.gps;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.Button;
import android.widget.Toast;
import android.location.*;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Button b = findViewById(R.id.getLoc);
        b.setOnClickListener(v -> {
            LocationManager lm = (LocationManager)getSystemService(LOCATION_SERVICE);
            try {
                Location loc = lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);
                Toast.makeText(this, "Lat:"+loc.getLatitude()+" Long:"+loc.getLongitude(), Toast.LENGTH_LONG).show();
            } catch (SecurityException e) {
                Toast.makeText(this, "Enable location permission", Toast.LENGTH_SHORT).show();
            }
        });
    }
}

✅ 6. Linking a Webpage
XML
<Button xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/linkBtn"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:text="Open Webpage"
    android:layout_gravity="center"/>

Java
package com.example.webpage;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.content.Intent;
import android.net.Uri;
import android.widget.Button;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Button b = findViewById(R.id.linkBtn);
        b.setOnClickListener(v -> {
            Intent i = new Intent(Intent.ACTION_VIEW, Uri.parse("https://www.google.com"));
            startActivity(i);
        });
    }
}

✅ 7. SQLite Database
XML
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:padding="20dp"
    android:layout_width="match_parent" android:layout_height="match_parent">

    <EditText android:id="@+id/name" android:hint="Name"
        android:layout_width="match_parent" android:layout_height="wrap_content"/>
    <Button android:id="@+id/save" android:text="Save"
        android:layout_width="wrap_content" android:layout_height="wrap_content"/>
</LinearLayout>

Java
package com.example.sqlite;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.*;
import android.database.sqlite.*;

public class MainActivity extends AppCompatActivity {
    SQLiteDatabase db;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        db = openOrCreateDatabase("MyDB", MODE_PRIVATE, null);
        db.execSQL("CREATE TABLE IF NOT EXISTS users(name TEXT);");

        EditText name = findViewById(R.id.name);
        Button save = findViewById(R.id.save);

        save.setOnClickListener(v -> {
            db.execSQL("INSERT INTO users VALUES('" + name.getText() + "');");
            Toast.makeText(this, "Saved!", Toast.LENGTH_SHORT).show();
        });
    }
}

✅ 8. Progress Bar
XML
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:gravity="center"
    android:layout_width="match_parent" android:layout_height="match_parent">
    <ProgressBar android:id="@+id/progressBar"
        android:layout_width="wrap_content" android:layout_height="wrap_content"
        style="?android:attr/progressBarStyleHorizontal"/>
</LinearLayout>

Java
package com.example.progressbar;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.ProgressBar;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ProgressBar bar = findViewById(R.id.progressBar);
        new Thread(() -> {
            for (int i=0; i<=100; i++) {
                bar.setProgress(i);
                try { Thread.sleep(50); } catch (InterruptedException e) {}
            }
        }).start();
    }
}

✅ 9. Free Hand Drawing App
XML
<com.example.drawing.MyView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent" android:layout_height="match_parent" />

Java

MyView.java

package com.example.drawing;
import android.content.Context;
import android.graphics.*;
import android.view.*;

public class MyView extends View {
    Paint paint = new Paint();
    Path path = new Path();
    public MyView(Context c) { super(c); paint.setColor(Color.BLACK); paint.setStrokeWidth(5); paint.setStyle(Paint.Style.STROKE);}
    @Override
    protected void onDraw(Canvas canvas){ canvas.drawPath(path, paint);}
    @Override
    public boolean onTouchEvent(MotionEvent e){
        if(e.getAction()==MotionEvent.ACTION_DOWN) path.moveTo(e.getX(), e.getY());
        else if(e.getAction()==MotionEvent.ACTION_MOVE) path.lineTo(e.getX(), e.getY());
        invalidate(); return true;
    }
}


MainActivity.java

package com.example.drawing;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle b){ super.onCreate(b); setContentView(new MyView(this)); }
}

✅ 10. Phone Calling App

Add permission:

<uses-permission android:name="android.permission.CALL_PHONE"/>

XML
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:gravity="center"
    android:layout_width="match_parent" android:layout_height="match_parent">
    <EditText android:id="@+id/number" android:hint="Enter number"
        android:inputType="phone" android:layout_width="200dp" android:layout_height="wrap_content"/>
    <Button android:id="@+id/callBtn" android:text="Call" android:layout_width="wrap_content" android:layout_height="wrap_content"/>
</LinearLayout>

Java
package com.example.calling;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.*;
import android.content.Intent;
import android.net.Uri;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        EditText num = findViewById(R.id.number);
        Button call = findViewById(R.id.callBtn);
        call.setOnClickListener(v -> {
            Intent i = new Intent(Intent.ACTION_CALL, Uri.parse("tel:" + num.getText()));
            startActivity(i);
        });
    }
}

✅ 11. Create an Alarm Clock

(Already given above — simple version)

✅ 12. List All Sensors
XML
<ListView xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/listView"
    android:layout_width="match_parent"
    android:layout_height="match_parent"/>

Java
package com.example.sensors;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.hardware.*;
import android.widget.*;

import java.util.List;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ListView list = findViewById(R.id.listView);
        SensorManager sm = (SensorManager)getSystemService(SENSOR_SERVICE);
        List<Sensor> sensors = sm.getSensorList(Sensor.TYPE_ALL);
        String[] names = new String[sensors.size()];
        for (int i=0; i<sensors.size(); i++) names[i] = sensors.get(i).getName();
        list.setAdapter(new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, names));
    }
}

✅ 13. Convert Text to Speech
XML
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:padding="20dp"
    android:layout_width="match_parent" android:layout_height="match_parent">
    <EditText android:id="@+id/text" android:hint="Enter text" android:layout_width="match_parent" android:layout_height="wrap_content"/>
    <Button android:id="@+id/speak" android:text="Speak" android:layout_width="wrap_content" android:layout_height="wrap_content"/>
</LinearLayout>

Java
package com.example.tts;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.speech.tts.TextToSpeech;
import android.widget.*;
import java.util.Locale;

public class MainActivity extends AppCompatActivity {
    TextToSpeech tts;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        EditText text = findViewById(R.id.text);
        Button speak = findViewById(R.id.speak);
        tts = new TextToSpeech(this, s -> tts.setLanguage(Locale.US));
        speak.setOnClickListener(v -> tts.speak(text.getText().toString(), TextToSpeech.QUEUE_FLUSH, null, null));
    }
}

✅ 14. Create a Flutter Application

In Android Studio:

File → New → New Flutter Project → Flutter Application


Then in lib/main.dart:

import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: Text('My Flutter App')),
        body: Center(child: Text('Hello Flutter!')),
      ),
    );
  }
}

✅ 15. Simple Android Game (Ball Move)
XML
<com.example.simplegame.GameView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent" android:layout_height="match_parent"/>

GameView.java
package com.example.simplegame;
import android.content.Context;
import android.graphics.*;
import android.view.*;

public class GameView extends View {
    float x=100, y=100;
    Paint paint = new Paint();
    public GameView(Context c){ super(c); paint.setColor(Color.RED);}
    @Override
    protected void onDraw(Canvas canvas){ canvas.drawCircle(x,y,50,paint);}
    @Override
    public boolean onTouchEvent(MotionEvent e){
        x = e.getX(); y = e.getY(); invalidate(); return true;
    }
}

MainActivity.java
package com.example.simplegame;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle b){ super.onCreate(b); setContentView(new GameView(this)); }
}


Would you like me to put all 15 mini-projects in a downloadable ZIP (each in its own folder with ready AndroidManifest.xml)? It’ll be easier to run them all.
